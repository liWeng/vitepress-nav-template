import{_ as p,r as a,o as d,c as _,b as l,e as t,d as i,w as o,a as n}from"./app.4690b2e6.js";const ll=JSON.parse('{"title":"MySQL数据库规范","description":"","frontmatter":{},"headers":[{"level":2,"title":"(一) 命名规约","slug":"一-命名规约","link":"#一-命名规约","children":[]},{"level":2,"title":"(二) 基础规约","slug":"二-基础规约","link":"#二-基础规约","children":[]},{"level":2,"title":"(三) 建表规约","slug":"三-建表规约","link":"#三-建表规约","children":[]},{"level":2,"title":"(四) 索引规约","slug":"四-索引规约","link":"#四-索引规约","children":[]},{"level":2,"title":"(五) SQL语句","slug":"五-sql语句","link":"#五-sql语句","children":[]},{"level":2,"title":"(六) ORM映射","slug":"六-orm映射","link":"#六-orm映射","children":[]}],"relativePath":"articles/norm/开发规范-数据库.md","lastUpdated":1697707960000}'),u={name:"articles/norm/开发规范-数据库.md"},s=n("",8),c={start:"2"},r=l("blockquote",null,[l("p",null,"说明：MySQL 在 Windows 下不区分大小写，但在 Linux下默认是区分大小写。因此，数据库名、表名、字段名，都不允许出现任何大写字母，避免节外生枝。")],-1),h={start:"3"},b=n("",8),L=l("p",null,"【推荐】字段允许适当冗余，以提高查询性能，但必须考虑数据一致。冗余字段应遵循：",-1),T=l("ol",null,[l("li",null,[l("p",null,"不是频繁修改的字段。")]),l("li",null,[l("p",null,"不是varchar超长字段，更不能是text字段。")])],-1),N=n("",4),S=n("",3),m={start:"14"},k=l("li",null,[l("p",null,"【推荐】利用覆盖索引来进行查询操作，避免回表。"),l("blockquote",null,[l("p",null,"说明：能够建立索引的种类：主键索引、唯一索引、普通索引，而覆盖索引是一种查询的一种效果，用explain的结果，extra列会出现：using index。")])],-1),q=l("p",null,"【推荐】利用延迟关联或者子查询优化超多分页场景。",-1),f=l("blockquote",null,[l("p",null,"说明：MySQL并不是跳过offset行，而是取offset+N行，然后返回放弃前offset行，返回N行，那当offset特别大的时候，效率就非常的低下，要么控制返回的总页数，要么对超过特定阈值的页数进行SQL改写。")],-1),E=l("pre",null,[l("code",null,` SELECT a.\\* FROM 表1 a, (select id from 表1 where 条件 LIMIT 100000,20 ) b
 where a.id=b.id
`)],-1),x=l("p",null,"【推荐】 SQL性能优化的目标：至少要达到 range 级别，要求是ref级别，如果可以是consts 最好。",-1),C=l("ul",null,[l("li",null,[l("p",null,"consts 单表中最多只有一个匹配行（主键或者唯一索引），在优化阶段即可读取到数据。")]),l("li",null,[l("p",null,"ref 指的是使用普通的索引（normal index）。")]),l("li",null,[l("p",null,"range 对索引进行范围检索。")])],-1),g=l("p",null,"【推荐】建组合索引的时候，区分度最高的在最左边。",-1),I=l("blockquote",null,[l("p",null,"说明：存在非等号和等号混合判断条件时，在建索引时，请把等号条件的列前置。如：where a>? and b=? 那么即使a的区分度更高，也必须把b放在索引的最前列。")],-1),A=l("li",null,[l("p",null,"【推荐】防止因字段类型不同造成的隐式转换，导致索引失效。")],-1),U=l("li",null,[l("p",null,"【参考】创建索引时避免有如下极端误解："),l("ol",null,[l("li",null,[l("p",null,"宁滥勿缺。认为一个查询就需要建一个索引。")]),l("li",null,[l("p",null,"宁缺勿滥。认为索引会消耗空间、严重拖慢更新和新增速度。")]),l("li",null,[l("p",null,"抵制惟一索引。认为业务的惟一性一律需要在应用层通过“先查后插”方式解决。")])])],-1),y=l("h2",{id:"五-sql语句",tabindex:"-1"},[t("(五) SQL语句 "),l("a",{class:"header-anchor",href:"#五-sql语句","aria-hidden":"true"},"#")],-1),D=n("",19),M=l("p",null,"【强制】当某一列的值全是NULL时，count(col)的返回结果为0，但sum(col)的返回结果为NULL，因此使用sum()时需注意NPE问题。",-1),Q=l("pre",null,[l("code",null,` SELECT IF(ISNULL(SUM(g)),0,SUM(g)) FROM table;
`)],-1),P=l("li",null,[l("p",null,"【强制】使用ISNULL()来判断是否为NULL值。"),l("blockquote",null,[l("p",null,"说明：NULL与任何值的直接比较都为NULL。")])],-1),R=n("",3),O=n("",4),v=l("p",null,"【强制】iBATIS自带的queryForList(String statementName,int start,int size)不推荐使用。",-1),V=l("blockquote",null,[l("p",null,"说明：其实现方式是在数据库取到statementName对应的SQL语句的所有记录，再通过subList取start,size的子集合。")],-1),B=l("p",null,[t('    map.put("start", start);'),l("br"),t('     map.put("size", size);')],-1),w=l("li",null,[l("p",null,"【强制】不允许直接拿HashMap与Hashtable作为查询结果集的输出。"),l("blockquote",null,[l("p",null,"说明：resultClass=”Hashtable”，会置入字段名和属性值，但是值的类型不可控。")])],-1),H=l("li",null,[l("p",null,"【强制】更新数据表记录时，必须同时更新记录对应的update_time字段值为当前时间。")],-1),j=l("li",null,[l("p",null,"【推荐】不要写一个大而全的数据更新接口。传入为POJO类，不管是不是自己的目标更新字段，都进行update")],-1),F=l("pre",null,[l("code",null,`table set c1=value1,c2=value2,c3=value3; 这是不对的。执行SQL时，不要更新无改动的字段，一是易出错；二是效率低；三是增加binlog存储。
`)],-1),G=l("ol",{start:"9"},[l("li",null,[l("p",null,"【参考】@Transactional事务不要滥用。事务会影响数据库的QPS，另外使用事务的地方需要考虑各方面的回滚方案，包括缓存回滚、搜索引擎回滚、消息补偿、统计修正等。")]),l("li",null,[l("p",null,"【参考】<isEqual>中的compareValue是与属性值对比的常量，一般是数字，表示相等时带上此条件；<isNotEmpty>表示不为空且不为null时执行；<isNotNull>表示不为null值时执行。")])],-1);function W($,z,J,Y,K,X){const e=a("font");return d(),_("div",null,[s,l("ol",c,[l("li",null,[t("【强制】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。"),i(e,{color:"#32CD32"},{default:o(()=>[t("√")]),_:1}),t("  aliyun_admin，rdc_config，level3_name "),i(e,{color:"#DC143C"},{default:o(()=>[t("Χ")]),_:1}),t("  AliyunAdmin，rdcConfig，level_3_name")])]),r,l("ol",h,[b,l("li",null,[L,T,i(e,{color:"#32CD32"},{default:o(()=>[t("√")]),_:1}),t("  商品类目名称使用频率高，字段长度短，名称基本一成不变，可在相关联的表中冗余存储类目名称，避免关联查询。")]),N]),S,l("ol",m,[k,l("li",null,[q,f,i(e,{color:"#32CD32"},{default:o(()=>[t("√")]),_:1}),t("  先快速定位需要获取的id段，然后再关联："),E]),l("li",null,[x,C,i(e,{color:"#DC143C"},{default:o(()=>[t("Χ")]),_:1}),t("  explain表的结果，type=index，索引物理文件全扫描，速度非常慢，这个index级别比较range还低，与全表扫描是小巫见大巫。")]),l("li",null,[g,i(e,{color:"#32CD32"},{default:o(()=>[t("√")]),_:1}),t("  如果where a=? and b=?，a列的几乎接近于唯一值，那么只需要单建idx_a索引即可。"),I]),A,U]),y,l("ol",null,[D,l("li",null,[M,i(e,{color:"#32CD32"},{default:o(()=>[t("√")]),_:1}),t("  可以使用如下方式来避免sum的NPE问题："),Q]),P]),R,l("ol",null,[O,l("li",null,[v,V,i(e,{color:"#32CD32"},{default:o(()=>[t("√")]),_:1}),t("  Map<String, Object> map = new HashMap<String, Object>(); "),B]),w,H,j]),F,G])}const tl=p(u,[["render",W]]);export{ll as __pageData,tl as default};
