import{_ as a,r,o as d,c,b as e,d as o,w as i,e as l,a as n}from"./app.4690b2e6.js";const $e=JSON.parse('{"title":"一、编程规约","description":"","frontmatter":{},"headers":[{"level":2,"title":"(一) 命名风格","slug":"一-命名风格","link":"#一-命名风格","children":[]},{"level":2,"title":"(二) 常量定义","slug":"二-常量定义","link":"#二-常量定义","children":[]},{"level":2,"title":"(三) 代码格式","slug":"三-代码格式","link":"#三-代码格式","children":[]},{"level":2,"title":"(四) OOP规约","slug":"四-oop规约","link":"#四-oop规约","children":[]},{"level":2,"title":"(五) 集合处理","slug":"五-集合处理","link":"#五-集合处理","children":[]},{"level":2,"title":"(六) 并发处理","slug":"六-并发处理","link":"#六-并发处理","children":[]},{"level":2,"title":"(七) 控制语句","slug":"七-控制语句","link":"#七-控制语句","children":[]},{"level":2,"title":"(八) 注释规约","slug":"八-注释规约","link":"#八-注释规约","children":[]},{"level":2,"title":"(九) 其它","slug":"九-其它","link":"#九-其它","children":[]},{"level":2,"title":"(一) 异常处理","slug":"一-异常处理","link":"#一-异常处理","children":[]},{"level":2,"title":"(二) 日志规约","slug":"二-日志规约","link":"#二-日志规约","children":[]}],"relativePath":"articles/norm/开发规范-java.md","lastUpdated":1697707960000}'),p={name:"articles/norm/开发规范-java.md"},s=e("p",null,"Java开发手册",-1),u=e("h1",{id:"一、编程规约",tabindex:"-1"},[l("一、编程规约 "),e("a",{class:"header-anchor",href:"#一、编程规约","aria-hidden":"true"},"#")],-1),h=e("h2",{id:"一-命名风格",tabindex:"-1"},[l("(一) 命名风格 "),e("a",{class:"header-anchor",href:"#一-命名风格","aria-hidden":"true"},"#")],-1),_=e("p",null,"【强制】不能以下划线或美元符号开始和结束.",-1),b=e("p",null,"【强制】不能使用拼音与英文混合的方式，更不允许直接使用中文或者纯拼音的方式。alibaba / taobao / youku / hangzhou 等国际通用的名称，可视同英文。",-1),g=e("p",null,"【强制】类名使用UpperCamelCase风格，必须遵从驼峰形式，但以下情形例外：DO / BO / DTO / VO / AO",-1),f=e("p",null,"【强制】方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase风格，必须遵从驼峰形式。",-1),q=e("p",null,"【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。",-1),C=e("li",null,[e("p",null,"【强制】抽象类命名使用Abstract或Base开头；异常类命名使用Exception结尾；测试类命名以它要测试的类的名称开始，以Test结尾。")],-1),S=e("p",null,"【强制】中括号是数组类型的一部分",-1),m=e("p",null,"【强制】POJO类中布尔类型的变量，都不要加is，否则部分框架解析会引起序列化错误。",-1),D=e("p",null,[l("【强制】包名小写，点分隔符之间只有一个自然语义的英语单词。"),e("br"),l(" 包名使用单数形式，类名如果有复数含义，类名可以使用复数形式。")],-1),T=e("p",null,"【强制】杜绝完全不规范的缩写，避免望文不知义。",-1),k=e("p",null,"【推荐】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词组合来表达其意。",-1),x=e("p",null,"【推荐】如果模块、接口、类、方法使用了设计模式，在命名时体现出具体模式，有利于阅读者快速理解架构设计理念。",-1),y=e("p",null,"【强制】接口和实现类的命名有两套规则：",-1),A=e("ol",null,[e("li",null,"对于Service和DAO类，基于SOA的理念，暴露出来的服务一定是接口，内部的实现类用Impl的后缀与接口区别。")],-1),P=e("ol",null,[e("li",null,"如果是形容能力的接口名称，取对应的形容词做接口名（通常是–able的形式）。")],-1),O=e("p",null,"【参考】枚举类名建议带上Enum后缀，枚举成员名称需要全大写，单词间用下划线隔开。",-1),v=n("",1),E=e("h2",{id:"二-常量定义",tabindex:"-1"},[l("(二) 常量定义 "),e("a",{class:"header-anchor",href:"#二-常量定义","aria-hidden":"true"},"#")],-1),I=e("p",null,"【强制】不允许任何魔法值（即未经定义的常量）直接出现在代码中。",-1),L=e("p",null,"【强制】long或者Long初始赋值时，使用大写的L，否则容易跟数字1混淆，造成误解。",-1),w=e("p",null,"【强制】不要使用一个常量类维护所有常量，按常量功能进行归类，分开维护。",-1),N=e("blockquote",null,[e("p",null,"说明：大而全的常量类，非得使用查找功能才能定位到修改的常量，不利于理解和维护。")],-1),V=n("",1),R=e("p",null,"【推荐】如果变量值仅在一个范围内变化，且带有名称之外的延伸属性，定义为枚举类。",-1),J=e("blockquote",null,[e("p",null,"上面例中数字就是延伸信息，表示星期几")],-1),M=e("h2",{id:"三-代码格式",tabindex:"-1"},[l("(三) 代码格式 "),e("a",{class:"header-anchor",href:"#三-代码格式","aria-hidden":"true"},"#")],-1),U=e("li",null,[e("p",null,"【强制】大括号的使用约定。如果是大括号内为空，则简洁地写成{}即可，不需要换行；如果是非空代码块则："),e("ol",null,[e("li",null,[e("p",null,"左大括号前不换行")]),e("li",null,[e("p",null,"左大括号后换行。")]),e("li",null,[e("p",null,"右大括号前换行。")]),e("li",null,[e("p",null,"右大括号后还有else等代码则不换行；表示终止的右大括号后必须换行。")])])],-1),B=e("p",null,"【强制】左小括号和字符之间不出现空格；同样，右小括号和字符之间也不出现空格。详见第5条下方正例提示。",-1),j=n("",4),F={start:"7"},K=n("",1),X=e("p",null,"【强制】方法参数在定义和传入时，多个参数逗号后边必须加空格。",-1),H=n("",3),z=e("h2",{id:"四-oop规约",tabindex:"-1"},[l("(四) OOP规约 "),e("a",{class:"header-anchor",href:"#四-oop规约","aria-hidden":"true"},"#")],-1),Y=e("li",null,[e("p",null,"【强制】避免通过一个类的对象引用访问此类的静态变量或静态方法，无谓增加编译器解析成本，直接用类名来访问即可。")],-1),$=e("li",null,[e("p",null,"【强制】所有的覆写方法，必须加@Override注解。"),e("blockquote",null,[e("p",null,"getObject()与get0bject()的问题。一个是字母的O，一个是数字的0，加@Override 可以准确判断是否覆盖成功。另外，如果在抽象类中对方法签名进行修改，其实现类会马上编译报错。")])],-1),W={"css-module":"."},G=e("p",null,"【强制】相同参数类型，相同业务含义，才可以使用Java的可变参数，避免使用Object。可变参数必须放置在参数列表的最后。",-1),Z=e("li",null,[e("p",null,"【强制】外部正在调用或者二方库依赖的接口，不允许修改方法签名，避免对接口调用方产生影响。接口过时必须加@Deprecated注解，并清晰地说明采用的新接口或者新服务是什么。")],-1),Q=e("li",null,[e("p",null,"【强制】不能使用过时的类或方法。"),e("blockquote",null,[e("p",null,"java.net.URLDecoder 中的方法decode(String encodeStr) 这个方法已经过时，应该使用双参数decode(String source, String encode)。接口提供方既然明确是过时接口，那么有义务同时提供新的接口；作为调用方来说，有义务去考证过时方法的新实现是什么。")])],-1),ee=e("p",null,"【强制】Object的equals方法容易抛空指针异常，应使用常量或确定有值的对象来调用equals。",-1),le=e("blockquote",null,[e("p",null,"推荐使用java.util.Objects#equals（JDK7引入的工具类）")],-1),te=e("li",null,[e("p",null,"【强制】所有的相同类型的包装类对象之间值的比较，全部使用equals方法比较。"),e("blockquote",null,[e("p",null,"对于Integer var = ? 在-128至127范围内的赋值，Integer对象是在 IntegerCache.cache产生，会复用已有对象，这个区间内的Integer值可以直接使用==进行判断，但是这个区间之外的所有数据，都会在堆上产生，并不会复用已有对象，这是一个大坑，推荐使用equals方法进行判断。")])],-1),oe=e("p",null,"【强制】关于基本数据类型与包装数据类型的使用标准如下：",-1),ie=e("ol",null,[e("li",null,[e("p",null,"所有的POJO类属性必须使用包装数据类型。")]),e("li",null,[e("p",null,"RPC方法的返回值和参数必须使用包装数据类型。")]),e("li",null,[e("p",null,"所有的局部变量使用基本数据类型。")])],-1),ne=e("blockquote",null,[e("p",null,"说明：POJO类属性没有初值是提醒使用者在需要使用时，必须自己显式地进行赋值，任何 NPE问题，或者入库检查，都由使用者来保证。")],-1),ae=e("p",null,"【强制】定义DO/DTO/VO等POJO类时，不要设定任何属性默认值。",-1),re=n("",11),de=n("",7),ce=e("strong",null,"/**内容*/",-1),pe=e("strong",null,"// xxx",-1),se=e("blockquote",null,[e("p",null,"说明：在IDE编辑窗口中，Javadoc方式会提示相关注释，生成Javadoc可以正确输出相应注释；在IDE中，工程调用方法时，不进入方法即可悬浮提示方法、参数、返回值的意义，提高阅读效率。")],-1),ue=e("li",null,[e("p",null,"【强制】所有的抽象方法（包括接口中的方法）必须要用Javadoc注释、除了返回值、参数、异常说明外，还必须指出该方法做什么事情，实现什么功能。说明：对子类的实现要求，或者调用注意事项，请一并说明。")],-1),he=e("li",null,[e("p",null,"【强制】所有的类都必须添加创建者和创建日期。")],-1),_e=e("strong",null,"//",-1),be=e("strong",null,"/**/",-1),ge=e("li",null,[e("p",null,"【强制】所有的枚举类型字段必须要有注释，说明每个数据项的用途。")],-1),fe=e("p",null,"【推荐】如果翻译英文不好，则用中文注释把问题说清楚。专有名词与关键字保持英文原文即可。",-1),qe=n("",4),Ce=e("p",null,"【参考】特殊注释标记，请注明标记人与标记时间。注意及时处理这些标记，通过标记扫描，经常清理此类标记。线上故障有时候就是来源于这些标记处的代码。",-1),Se=e("p",null,"表示需要实现，但目前还未实现的功能。这实际上是一个Javadoc的标签，目前的Javadoc还没有实现，但已经被广泛使用。只能应用于类，接口和方法（因为它是一个Javadoc标签）。",-1),me=e("p",null,"在注释中用FIXME标记某代码是错误的，而且不能工作，需要及时纠正的情况。",-1),De=e("h2",{id:"九-其它",tabindex:"-1"},[l("(九) 其它 "),e("a",{class:"header-anchor",href:"#九-其它","aria-hidden":"true"},"#")],-1),Te=e("li",null,[e("p",null,"【强制】在使用正则表达式时，利用好其预编译功能，可以有效加快正则匹配速度。"),e("blockquote",null,[e("p",null,"说明：不要在方法体内定义：Pattern pattern = Pattern.compile(规则);")])],-1),ke=e("li",null,[e("p",null,"【强制】velocity调用POJO类的属性时，建议直接使用属性名取值即可，模板引擎会自动按规范调用POJO的getXxx()，如果是boolean基本数据类型变量（boolean命名不需要加is前缀），会自动调用isXxx()方法。"),e("blockquote",null,[e("p",null,"说明：注意如果是Boolean包装类对象，优先调用getXxx()的方法。")])],-1),xe=e("li",null,[e("p",null,"【强制】后台输送给页面的变量必须加$!{var}——中间的感叹号。"),e("blockquote",null,[e("p",null,"说明：如果var=null或者不存在，那么${var}会直接显示在页面上。")])],-1),ye=e("br",null,null,-1),Ae=n("",4),Pe=e("h1",{id:"二、异常及日志",tabindex:"-1"},[l("二、异常及日志 "),e("a",{class:"header-anchor",href:"#二、异常及日志","aria-hidden":"true"},"#")],-1),Oe=e("h2",{id:"一-异常处理",tabindex:"-1"},[l("(一) 异常处理 "),e("a",{class:"header-anchor",href:"#一-异常处理","aria-hidden":"true"},"#")],-1),ve=e("p",null,"【强制】Java类库中定义的一类RuntimeException可以通过预先检查进行规避，而不应该通过catch 来处理，比如：IndexOutOfBoundsException，NullPointerException等等。",-1),Ee=e("blockquote",{"css-module":"."},[e("pre",null,[e("code",null,`  说明：无法通过预检查的异常除外，如在解析一个外部传来的字符串形式数字时，通过catch NumberFormatException来实现。  
`)])],-1),Ie=n("",11),Le=e("p",null,"【参考】避免出现重复的代码（Don’t Repeat Yourself），即DRY原则。",-1),we=e("blockquote",{"css-module":"."},[e("p",null,"说明：随意复制和粘贴代码，必然会导致代码的重复，在以后需要修改时，需要修改所有的副本，容易遗漏。必要时抽取共性方法，或者抽象公共类，甚至是组件化。")],-1),Ne=e("h2",{id:"二-日志规约",tabindex:"-1"},[l("(二) 日志规约 "),e("a",{class:"header-anchor",href:"#二-日志规约","aria-hidden":"true"},"#")],-1),Ve=n("",4),Re=e("p",null,"【强制】避免重复打印日志，浪费磁盘空间，务必在log4j.xml中设置additivity=false。",-1),Je=e("p",null,"【强制】异常信息应该包括两类信息：案发现场信息和异常堆栈信息。如果不处理，那么通过关键字throws往上抛出。",-1),Me=e("li",null,[e("p",null,"【推荐】谨慎地记录日志。生产环境禁止输出debug日志；有选择地输出info日志；如果使用warn来记录刚上线时的业务行为信息，一定要注意日志输出量的问题，避免把服务器磁盘撑爆，并记得及时删除这些观察日志。")],-1),Ue=e("li",null,[e("p",null,"【参考】可以使用warn日志级别来记录用户输入参数错误的情况，避免用户投诉时，无所适从。注意日志输出的级别，error级别只记录系统逻辑出错、异常等重要的错误信息。如非必要，请不要在此场景打出error级别。")],-1);function Be(je,Fe,Ke,Xe,He,ze){const t=r("font");return d(),c("div",null,[s,u,h,e("ol",null,[e("li",null,[_,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  _name / __name / $Object / name_ / name$ / Object$ ")]),e("li",null,[b,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  DaZhePromotion [打折] / getPingfenByName() [评分] / int 某变量 = 3")]),e("li",null,[g,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  MarcoPolo / UserDO / XmlService / TcpUdpDeal / TaPromotion "),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  macroPolo / UserDo / XMLService / TCPUDPDeal / TAPromotion ")]),e("li",null,[f,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  localValue / getHttpMessage() / inputUserId")]),e("li",null,[q,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  MAX_STOCK_COUNT 反例：MAX_COUNT")]),C,e("li",null,[S,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  String[] args "),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  String args[]")]),e("li",null,[m,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  Boolean isDeleted ,它的方法也是isDeleted()。RPC框架在反向解析的时候，得到对应的属性名称是deleted，导致属性获取不到。")]),e("li",null,[D,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  应用工具类包名为com.alibaba.open.util、类名为MessageUtils（此规则参考spring的框架结构） ")]),e("li",null,[T,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  AbstractClass“缩写”命名成AbsClass；condition“缩写”命名成condi，此类随意缩写严重降低了代码的可阅读性。")]),e("li",null,[k,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  从远程仓库拉取代码的类命名为 PullCodeFromRemoteRepository。 "),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  变量 int a")]),e("li",null,[x,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  public class OrderFactory; "),o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  public class LoginProxy; "),o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  public class ResourceObserver;")]),e("li",null,[y,A,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  CacheServiceImpl实现CacheService接口。"),P,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  AbstractTranslator实现 Translatable。")]),e("li",null,[O,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  枚举名字为ProcessStatusEnum的成员名称：SUCCESS / UNKOWN_REASON。")]),v]),E,e("ol",null,[e("li",null,[I,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l('  String key = "Id#taobao_" + tradeId; cache.put(key, value); '),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  int priceTable[] = new int[16]; //ERROR：这个16究竟有何含义呢?; "),o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  static final int PRICE_TABLE_MAX = 16; //OK：带名字 ;int price Table[] = new int [PRICE_TABLE_MAX]; //OK：名字的含义是很清楚的 ")]),e("li",null,[L,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  Long a = 2L;")]),e("li",null,[w,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  缓存相关常量放在类CacheConsts下；系统配置相关常量放在类ConfigConsts下。"),N]),V,e("li",null,[R,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  public Enum { MONDAY(1), TUESDAY(2), WEDNESDAY(3), THURSDAY(4),FRIDAY(5), SATURDAY(6), SUNDAY(7);} "),J])]),M,e("ol",null,[U,e("li",null,[B,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  if (空格a == b空格)")]),j]),o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  // 注释内容，注意在//和注释内容之间有一个空格。"),e("ol",F,[K,e("li",null,[X,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l('  method("a", "b", "c");')]),H]),z,e("ol",null,[Y,$,e("li",W,[G,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  public User getUsers(String type, Integer... ids)")]),Z,Q,e("li",null,[ee,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l('  "test".equals(object); '),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l('  object.equals("test");'),le]),te,e("li",null,[oe,ie,ne,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  数据库的查询结果可能是null，因为自动拆箱，用基本数据类型接收有NPE风险。 "),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  比如显示成交总额涨跌情况，即正负x%，x为基本数据类型，调用的RPC服务，调用不成功时，返回的是默认值，页面显示为0%，这是不合理的，应该显示成中划线。所以包装数据类型的null值，能够表示额外的信息，如：远程调用失败，异常退出。")]),e("li",null,[ae,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  POJO类的gmtCreate默认值为new Date();但是这个属性在数据提取时并没有置入具体值，在更新其它字段时又附带更新了此字段，导致创建时间被修改成当前时间。")]),re]),de,e("ol",null,[e("li",null,[e("p",null,[l("【强制】类、类属性、类方法的注释必须使用Javadoc规范，使用 "),o(t,{color:"#CD5C5C"},{default:i(()=>[ce]),_:1}),l(" 格式，不得使用"),o(t,{color:"#CD5C5C"},{default:i(()=>[pe]),_:1}),l("方式。")]),se]),ue,he,e("li",null,[e("p",null,[l("【强制】方法内部单行注释，在被注释语句上方另起一行，使用"),o(t,{color:"#CD5C5C"},{default:i(()=>[_e]),_:1}),l("注释。方法内部多行注释使用"),o(t,{color:"#CD5C5C"},{default:i(()=>[be]),_:1}),l("注释，注意与代码对齐。")])]),ge,e("li",null,[fe,o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  “TCP连接超时”解释成“传输控制协议连接超时”")]),qe,e("li",null,[Ce,e("ol",null,[e("li",null,[e("p",null,[l("待办事宜（"),o(t,{color:"#4169E1"},{default:i(()=>[l("TODO")]),_:1}),l("）:（ 标记人，标记时间，[预计处理时间]）")]),Se]),e("li",null,[e("p",null,[l("错误，不能工作（"),o(t,{color:"#4169E1"},{default:i(()=>[l("FIXME")]),_:1}),l("）:（标记人，标记时间，[预计处理时间]）")]),me])])])]),De,e("ol",null,[Te,ke,xe,e("li",null,[e("p",null,[l("【强制】注意 Math.random() 这个方法返回是double类型，注意取值的范围 0≤x<1（能够取到零值，注意除零异常）"),ye,l(" 如果想获取整数类型的随机数，不要将x放大10的若干倍然后取整，直接使用Random对象的"),o(t,{color:"#4169E1"},{default:i(()=>[l("nextInt")]),_:1}),l("或者"),o(t,{color:"#4169E1"},{default:i(()=>[l("nextLong")]),_:1}),l("方法。")])]),Ae]),Pe,Oe,e("ol",null,[e("li",null,[ve,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  if (obj != null) {...} "),o(t,{color:"#DC143C"},{default:i(()=>[l("Χ")]),_:1}),l("  try { obj.method() } catch (NullPointerException e)"),Ee]),Ie,e("li",null,[Le,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l("  一个类中有多个public方法，都需要进行数行相同的参数校验操作，这个时候请抽取：private boolean checkParam(DTO dto)"),we])]),Ne,e("ol",null,[Ve,e("li",null,[Re,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l('  <logger name="com.taobao.dubbo.config" additivity="false">')]),e("li",null,[Je,o(t,{color:"#32CD32"},{default:i(()=>[l("√")]),_:1}),l('  logger.error(各类参数或者对象toString + "_" + e.getMessage(), e);')]),Me,Ue])])}const We=a(p,[["render",Be]]);export{$e as __pageData,We as default};
